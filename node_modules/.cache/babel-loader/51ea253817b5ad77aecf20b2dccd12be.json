{"ast":null,"code":"var _jsxFileName = \"/home/male/Documents/repos/steven-universe-react/src/pages/Characters/index.js\",\n    _s = $RefreshSig$();\n\nimport Nav from \"./../../components/Nav\";\nimport styles from \"./Characters.module.css\";\nimport { useState, useEffect } from 'react';\nimport logo from \"./../../img/logo.png\";\nimport CardItem from \"./../../components/CardItem\";\nimport Button from \"./../../components/Button\";\n/* import { data } from \"browserslist\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Characters() {\n  _s();\n\n  const dataKeys = [\"species\", \"gem_type\", \"gender_pronoun\"];\n  const [displayData, setDisplayData] = useState(false);\n  const [limit, setLimit] = useState(195);\n  const [buttonText, setButtonText] = useState(\"load more...\");\n  const [totalItems, setTotalItems] = useState(false);\n  useEffect(() => {\n    fetchData(limit);\n  }, [limit]);\n  /*     function dataToArray(json, limit){\n        let array = [];\n        for(let i in json){\n         array.push(json[i])       \n        }\n        return(array.slice(0,limit))\n      } */\n\n  async function fetchData(limit) {\n    const getData = await fetch(\"https://raw.githubusercontent.com/UncleJerry23/steven-universe-graphql-api/master/lib/utils/charactersSeeds/charactersFixed.json\");\n    const dataToJson = await getData.json();\n    const displayData = dataToJson.slice(0, limit);\n    const items = dataToJson.length;\n    setDisplayData(displayData);\n    setTotalItems(items);\n  }\n\n  function loadMore() {\n    setLimit(prev => prev + 5);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.logo,\n        src: logo,\n        alt: \"logo steven universe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cardContainer,\n        children: displayData && displayData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(CardItem, {\n            dataKeys: dataKeys,\n            data: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), limit < totalItems && /*#__PURE__*/_jsxDEV(Button, {\n        text: buttonText,\n        onClick: loadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n  /* return (\n      <>\n      <Nav /> \n        <main className = {styles.main}>               \n          <img className = {styles.logo} src={logo} alt='logo steven universe'/>\n          <div className={styles.cardContainer}>\n              {   charData && (\n                      charData.map((item, index)=>{                                    \n                          return <CardItem key={index} dataKeys={dataKeys} data=data={item}/>\n                   }) \n                   )\n                  \n              }                \n          </div>\n        </main>      \n      </>\n    ); */\n}\n\n_s(Characters, \"op7TkHbCT3gnkCM1OId5jYhY7ZA=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/home/male/Documents/repos/steven-universe-react/src/pages/Characters/index.js"],"names":["Nav","styles","useState","useEffect","logo","CardItem","Button","Characters","dataKeys","displayData","setDisplayData","limit","setLimit","buttonText","setButtonText","totalItems","setTotalItems","fetchData","getData","fetch","dataToJson","json","slice","items","length","loadMore","prev","main","cardContainer","map","item","index"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA;;;;;AAGA,SAASC,UAAT,GAAqB;AAAA;;AACjB,QAAMC,QAAQ,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAuB,gBAAvB,CAAjB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAmBV,QAAQ,CAAC,GAAD,CAAjC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,cAAD,CAA5C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,SAAS,CAACN,KAAD,CAAT;AACH,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,iBAAeM,SAAf,CAAyBN,KAAzB,EAA+B;AAC3B,UAAMO,OAAO,GAAG,MAAMC,KAAK,CAAC,kIAAD,CAA3B;AACA,UAAMC,UAAU,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAzB;AACA,UAAMZ,WAAW,GAAGW,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoBX,KAApB,CAApB;AACA,UAAMY,KAAK,GAAGH,UAAU,CAACI,MAAzB;AACAd,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAO,IAAAA,aAAa,CAACO,KAAD,CAAb;AACH;;AAED,WAASE,QAAT,GAAmB;AAChBb,IAAAA,QAAQ,CAACc,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAR;AAEF;;AAGD,sBACE;AAAA,4BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAM,MAAA,SAAS,EAAIzB,MAAM,CAAC0B,IAA1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAI1B,MAAM,CAACG,IAAzB;AAA+B,QAAA,GAAG,EAAEA,IAApC;AAA0C,QAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEH,MAAM,CAAC2B,aAAvB;AAAA,kBACOnB,WAAD,IACEA,WAAW,CAACoB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC3B,8BAAO,QAAC,QAAD;AAAsB,YAAA,QAAQ,EAAEvB,QAAhC;AAA0C,YAAA,IAAI,EAAEsB;AAAhD,aAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFH;AAFR;AAAA;AAAA;AAAA;AAAA,cAFF,EAYIpB,KAAK,GAAGI,UAAR,iBAAuB,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEF,UAAd;AAA0B,QAAA,OAAO,EAAEY;AAAnC;AAAA;AAAA;AAAA;AAAA,cAZ3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADF;AAsBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;;GA5EQlB,U;;KAAAA,U;AA8ET,eAAeA,UAAf","sourcesContent":["import Nav from \"./../../components/Nav\";\nimport styles from \"./Characters.module.css\";\nimport {useState, useEffect} from 'react';\n\nimport logo from \"./../../img/logo.png\";\n\nimport CardItem from \"./../../components/CardItem\";\nimport Button from \"./../../components/Button\";\n/* import { data } from \"browserslist\"; */\n\n\nfunction Characters(){    \n    const dataKeys = [\"species\", \"gem_type\",\"gender_pronoun\"];\n    const [displayData, setDisplayData] = useState(false); \n    const [limit, setLimit] =useState(195);\n    const [buttonText, setButtonText] = useState(\"load more...\");\n    const [totalItems, setTotalItems] = useState(false);\n\n\n    useEffect(()=>{\n        fetchData(limit);\n    },[limit])\n\n/*     function dataToArray(json, limit){\n      let array = [];\n      for(let i in json){\n       array.push(json[i])       \n      }\n      return(array.slice(0,limit))\n    } */\n\n    async function fetchData(limit){\n        const getData = await fetch(\"https://raw.githubusercontent.com/UncleJerry23/steven-universe-graphql-api/master/lib/utils/charactersSeeds/charactersFixed.json\");\n        const dataToJson = await getData.json();\n        const displayData = dataToJson.slice(0, limit);\n        const items = dataToJson.length;\n        setDisplayData(displayData);   \n        setTotalItems(items);            \n    }\n\n    function loadMore(){\n       setLimit(prev => prev + 5);\n       \n    }\n\n\n    return (\n      <>\n        <Nav /> \n          <main className = {styles.main}>               \n            <img className = {styles.logo} src={logo} alt='logo steven universe'/>\n            <div className={styles.cardContainer}>\n                { (displayData) && (\n                    displayData.map((item, index)=>{              \n                        return <CardItem key={index} dataKeys={dataKeys} data={item}/>\n                      }\n                    ) \n                  )\n                }                \n            </div>\n            {\n              limit < totalItems &&  <Button text={buttonText} onClick={loadMore} />\n            }\n            \n          </main>      \n      </>\n    )\n\n    /* return (\n        <>\n        <Nav /> \n          <main className = {styles.main}>               \n            <img className = {styles.logo} src={logo} alt='logo steven universe'/>\n            <div className={styles.cardContainer}>\n                {   charData && (\n                        charData.map((item, index)=>{                                    \n                            return <CardItem key={index} dataKeys={dataKeys} data=data={item}/>\n                     }) \n                     )\n                    \n                }                \n            </div>\n          </main>      \n        </>\n      ); */\n\n\n}\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}