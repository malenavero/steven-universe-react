{"ast":null,"code":"var _jsxFileName = \"/home/male/Documents/repos/steven-universe-react/src/pages/Characters/index.js\",\n    _s = $RefreshSig$();\n\nimport Nav from \"./../../components/Nav\";\nimport styles from \"./Characters.module.css\";\nimport { useState, useEffect } from 'react';\nimport CardItem from \"./../../components/CardItem\";\nimport logo from \"./../../img/logo.png\";\nimport { data } from \"browserslist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Characters() {\n  _s();\n\n  const dataKeys = [\"species\", \"gem_type\", \"gender_pronoun\"];\n  const [charData, setCharData] = useState(false);\n  const [arrData, setArrData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function dataToArray(json, limit) {\n    let array = [];\n\n    for (let i in json) {\n      array.push(json[i]);\n    }\n\n    return array.slice(0, limit);\n  }\n\n  async function fetchData() {\n    const getData = await fetch(\"https://raw.githubusercontent.com/UncleJerry23/steven-universe-graphql-api/master/lib/utils/charactersSeeds/charactersFixed.json\");\n    const dataToJson = await getData.json();\n    const arrData = await dataToArray(dataToJson, 5);\n    setCharData(dataToJson);\n    setArrData(arrData);\n    console.log(arrData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.logo,\n        src: logo,\n        alt: \"logo steven universe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cardContainer,\n        children: arrData && arrData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(CardItem, {\n            dataKeys: dataKeys,\n            data: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n  /* return (\n      <>\n      <Nav /> \n        <main className = {styles.main}>               \n          <img className = {styles.logo} src={logo} alt='logo steven universe'/>\n          <div className={styles.cardContainer}>\n              {   charData && (\n                      charData.map((item, index)=>{                                    \n                          return <CardItem key={index} dataKeys={dataKeys} data=data={item}/>\n                   }) \n                   )\n                  \n              }                \n          </div>\n        </main>      \n      </>\n    ); */\n}\n\n_s(Characters, \"ivY5Ljtzg6/z6qjzKLR4CIuFt6s=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/home/male/Documents/repos/steven-universe-react/src/pages/Characters/index.js"],"names":["Nav","styles","useState","useEffect","CardItem","logo","data","Characters","dataKeys","charData","setCharData","arrData","setArrData","fetchData","dataToArray","json","limit","array","i","push","slice","getData","fetch","dataToJson","console","log","main","cardContainer","map","item","index"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,IAAT,QAAqB,cAArB;;;;AAGA,SAASC,UAAT,GAAqB;AAAA;;AACjB,QAAMC,QAAQ,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAuB,gBAAvB,CAAjB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,SAAS;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAIA,WAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAiC;AAC/B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAIC,CAAR,IAAaH,IAAb,EAAkB;AACjBE,MAAAA,KAAK,CAACE,IAAN,CAAWJ,IAAI,CAACG,CAAD,CAAf;AACA;;AACD,WAAOD,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAcJ,KAAd,CAAP;AACD;;AAED,iBAAeH,SAAf,GAA0B;AACtB,UAAMQ,OAAO,GAAG,MAAMC,KAAK,CAAC,kIAAD,CAA3B;AACA,UAAMC,UAAU,GAAG,MAAMF,OAAO,CAACN,IAAR,EAAzB;AACA,UAAMJ,OAAO,GAAG,MAAMG,WAAW,CAACS,UAAD,EAAY,CAAZ,CAAjC;AACAb,IAAAA,WAAW,CAACa,UAAD,CAAX;AACAX,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACH;;AAGD,sBACE;AAAA,4BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAM,MAAA,SAAS,EAAIV,MAAM,CAACyB,IAA1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAIzB,MAAM,CAACI,IAAzB;AAA+B,QAAA,GAAG,EAAEA,IAApC;AAA0C,QAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEJ,MAAM,CAAC0B,aAAvB;AAAA,kBACMhB,OAAO,IACLA,OAAO,CAACiB,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAe;AACvB,8BAAO,QAAC,QAAD;AAAsB,YAAA,QAAQ,EAAEtB,QAAhC;AAA0C,YAAA,IAAI,EAAEqB;AAAhD,aAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFH;AAFR;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADF;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;;GAlEQvB,U;;KAAAA,U;AAoET,eAAeA,UAAf","sourcesContent":["import Nav from \"./../../components/Nav\";\nimport styles from \"./Characters.module.css\";\nimport {useState, useEffect} from 'react';\nimport CardItem from \"./../../components/CardItem\";\nimport logo from \"./../../img/logo.png\";\nimport { data } from \"browserslist\";\n\n\nfunction Characters(){    \n    const dataKeys = [\"species\", \"gem_type\",\"gender_pronoun\"];\n    const [charData, setCharData] = useState(false); \n    const [arrData, setArrData] = useState([]);\n\n\n    useEffect(()=>{\n        fetchData();\n    },[])\n\n    function dataToArray(json, limit){\n      let array = [];\n      for(let i in json){\n       array.push(json[i])       \n      }\n      return(array.slice(0,limit))\n    }\n\n    async function fetchData(){\n        const getData = await fetch(\"https://raw.githubusercontent.com/UncleJerry23/steven-universe-graphql-api/master/lib/utils/charactersSeeds/charactersFixed.json\");\n        const dataToJson = await getData.json();\n        const arrData = await dataToArray(dataToJson,5);\n        setCharData(dataToJson);\n        setArrData(arrData);         \n        console.log(arrData);         \n    }\n\n\n    return (\n      <>\n        <Nav /> \n          <main className = {styles.main}>               \n            <img className = {styles.logo} src={logo} alt='logo steven universe'/>\n            <div className={styles.cardContainer}>\n                { arrData && (\n                    arrData.map((item, index)=>{                  \n                        return <CardItem key={index} dataKeys={dataKeys} data={item}/>\n                      }\n                    ) \n                  )\n                }                \n            </div>\n            <button >load more</button>\n          </main>      \n      </>\n    )\n\n    /* return (\n        <>\n        <Nav /> \n          <main className = {styles.main}>               \n            <img className = {styles.logo} src={logo} alt='logo steven universe'/>\n            <div className={styles.cardContainer}>\n                {   charData && (\n                        charData.map((item, index)=>{                                    \n                            return <CardItem key={index} dataKeys={dataKeys} data=data={item}/>\n                     }) \n                     )\n                    \n                }                \n            </div>\n          </main>      \n        </>\n      ); */\n\n\n}\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}